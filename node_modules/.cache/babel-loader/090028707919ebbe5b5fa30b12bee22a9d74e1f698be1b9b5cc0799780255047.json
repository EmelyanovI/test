{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/sber/src/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\n// Типы данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParamEditor = ({\n  params,\n  model\n}) => {\n  _s();\n  const [paramValues, setParamValues] = useState(model.paramValues);\n  const handleParamValueChange = (paramId, value) => {\n    setParamValues(prevParamValues => prevParamValues.map(pv => pv.paramId === paramId ? {\n      ...pv,\n      value\n    } : pv));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: params.map(param => {\n      var _paramValues$find;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `param-${param.id}`,\n          children: [param.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `param-${param.id}`,\n          type: \"text\",\n          value: ((_paramValues$find = paramValues.find(pv => pv.paramId === param.id)) === null || _paramValues$find === void 0 ? void 0 : _paramValues$find.value) || '',\n          onChange: e => handleParamValueChange(param.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, param.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ParamEditor, \"XdNZMNNCH5DK7R2BkBJeL90CFqQ=\");\n_c = ParamEditor;\nconst App = () => {\n  _s2();\n  const [params, setParams] = useState([]);\n  const [model, setModel] = useState({\n    paramValues: [],\n    colors: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const paramsResponse = await fetch('/params.json');\n      const paramsData = await paramsResponse.json();\n      setParams(paramsData);\n      const modelResponse = await fetch('/model.json');\n      const modelData = await modelResponse.json();\n      setModel(modelData);\n    };\n    fetchData();\n  }, []);\n  const handleModelChange = newModel => {\n    setModel(newModel);\n  };\n  const getModel = () => ({\n    paramValues: model.paramValues,\n    colors: model.colors\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ParamEditor, {\n      params: params,\n      model: model\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleModelChange(getModel()),\n      children: \"Get Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"I92p3j5sF07F1AZbuGOVqI7yEfg=\");\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nvar _c, _c2;\n$RefreshReg$(_c, \"ParamEditor\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","ParamEditor","params","model","_s","paramValues","setParamValues","handleParamValueChange","paramId","value","prevParamValues","map","pv","children","param","_paramValues$find","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","type","find","onChange","e","target","_c","App","_s2","setParams","setModel","colors","fetchData","paramsResponse","fetch","paramsData","json","modelResponse","modelData","handleModelChange","newModel","getModel","onClick","_c2","render","StrictMode","document","getElementById","$RefreshReg$"],"sources":["/Users/user/Projects/sber/src/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\n// Типы данных\ninterface Param {\n  id: number;\n  name: string;\n  type: 'string';\n}\n\ninterface ParamValue {\n  paramId: number;\n  value: string;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\ninterface Model {\n  paramValues: ParamValue[];\n  colors: Color[];\n}\n\ninterface ParamEditorProps {\n  params: Param[];\n  model: Model;\n}\n\nconst ParamEditor: React.FC<ParamEditorProps> = ({ params, model }) => {\n  const [paramValues, setParamValues] = useState<ParamValue[]>(model.paramValues);\n\n  const handleParamValueChange = (paramId: number, value: string) => {\n    setParamValues((prevParamValues) =>\n      prevParamValues.map((pv) =>\n        pv.paramId === paramId ? { ...pv, value } : pv\n      )\n    );\n  };\n\n  return (\n    <div>\n      {params.map((param) => (\n        <div key={param.id}>\n          <label htmlFor={`param-${param.id}`}>{param.name}:</label>\n          <input\n            id={`param-${param.id}`}\n            type=\"text\"\n            value={\n              paramValues.find((pv) => pv.paramId === param.id)?.value || ''\n            }\n            onChange={(e) => handleParamValueChange(param.id, e.target.value)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [params, setParams] = useState<Param[]>([]);\n  const [model, setModel] = useState<Model>({ paramValues: [], colors: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const paramsResponse = await fetch('/params.json');\n      const paramsData = await paramsResponse.json();\n      setParams(paramsData);\n\n      const modelResponse = await fetch('/model.json');\n      const modelData = await modelResponse.json();\n      setModel(modelData);\n    };\n    fetchData();\n  }, []);\n\n  const handleModelChange = (newModel: Model) => {\n    setModel(newModel);\n  };\n\n  const getModel = (): Model => ({\n    paramValues: model.paramValues,\n    colors: model.colors,\n  });\n\n  return (\n    <div>\n      <ParamEditor params={params} model={model} />\n      <button onClick={() => handleModelChange(getModel())}>Get Model</button>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}