{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/sber/src/index.tsx\";\nimport React from \"react\";\n\n// Типы данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ParamEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleParamValueChange = (paramId, value) => {\n      const {\n        paramValues\n      } = this.state;\n      const index = paramValues.findIndex(pv => pv.paramId === paramId);\n      if (index !== -1) {\n        this.setState(prevState => ({\n          paramValues: prevState.paramValues.map(pv => pv.paramId === paramId ? {\n            ...pv,\n            value\n          } : pv)\n        }));\n      }\n    };\n    this.getModel = () => ({\n      paramValues: this.state.paramValues,\n      colors: this.props.model.colors\n    });\n    this.state = {\n      paramValues: props.model.paramValues\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.params.map(param => {\n        var _this$state$paramValu;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `param-${param.id}`,\n            children: [param.name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `param-${param.id}`,\n            type: \"text\",\n            value: ((_this$state$paramValu = this.state.paramValues.find(pv => pv.paramId === param.id)) === null || _this$state$paramValu === void 0 ? void 0 : _this$state$paramValu.value) || \"\",\n            onChange: e => this.handleParamValueChange(param.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, param.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n// Пример использования\nexport const params = [{\n  id: 1,\n  name: \"Назначение\",\n  type: \"string\"\n}, {\n  id: 2,\n  name: \"Длина\",\n  type: \"string\"\n}];\nexport const model = {\n  paramValues: [{\n    paramId: 1,\n    value: \"повседневное\"\n  }, {\n    paramId: 2,\n    value: \"макси\"\n  }],\n  colors: []\n};\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ParamEditor","Component","constructor","props","handleParamValueChange","paramId","value","paramValues","state","index","findIndex","pv","setState","prevState","map","getModel","colors","model","render","children","params","param","_this$state$paramValu","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","type","find","onChange","e","target","App"],"sources":["/Users/user/Projects/sber/src/index.tsx"],"sourcesContent":["import React from \"react\";\n\n\n// Типы данных\ninterface Param {\n\tid: number;\n\tname: string;\n\ttype: \"string\";\n}\n\ninterface ParamValue {\n\tparamId: number;\n\tvalue: string;\n}\n\ninterface Color {\n\tr: number;\n\tg: number;\n\tb: number;\n\ta?: number;\n}\n\nexport interface Model {\n\tparamValues: ParamValue[];\n\tcolors: Color[];\n}\n\ninterface Props {\n\tparams: Param[];\n\tmodel: Model;\n}\n\ninterface State {\n\tparamValues: ParamValue[];\n}\n\nexport class ParamEditor extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tparamValues: props.model.paramValues,\n\t\t};\n\t}\n\n\thandleParamValueChange = (paramId: number, value: string) => {\n\t\tconst { paramValues } = this.state;\n\t\tconst index = paramValues.findIndex((pv) => pv.paramId === paramId);\n\n\t\tif (index !== -1) {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tparamValues: prevState.paramValues.map((pv) =>\n\t\t\t\t\tpv.paramId === paramId ? { ...pv, value } : pv\n\t\t\t\t),\n\t\t\t}));\n\t\t}\n\t};\n\n\tgetModel = (): Model => ({\n\t\tparamValues: this.state.paramValues,\n\t\tcolors: this.props.model.colors,\n\t});\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.params.map((param) => (\n\t\t\t\t\t<div key={param.id}>\n\t\t\t\t\t\t<label htmlFor={`param-${param.id}`}>{param.name}:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid={`param-${param.id}`}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\tthis.state.paramValues.find((pv) => pv.paramId === param.id)\n\t\t\t\t\t\t\t\t\t?.value || \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tthis.handleParamValueChange(param.id, e.target.value)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Пример использования\nexport const params: Param[] = [\n\t{\n\t\tid: 1,\n\t\tname: \"Назначение\",\n\t\ttype: \"string\",\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"Длина\",\n\t\ttype: \"string\",\n\t},\n];\n\nexport const model: Model = {\n\tparamValues: [\n\t\t{\n\t\t\tparamId: 1,\n\t\t\tvalue: \"повседневное\",\n\t\t},\n\t\t{\n\t\t\tparamId: 2,\n\t\t\tvalue: \"макси\",\n\t\t},\n\t],\n\tcolors: [],\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}