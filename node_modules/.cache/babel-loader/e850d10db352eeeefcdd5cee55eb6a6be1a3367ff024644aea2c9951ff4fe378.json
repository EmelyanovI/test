{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/test/bur/lesson-todos-react-master/src/ToDo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo({\n  todo,\n  toggleTask,\n  removeTask\n}) {\n  const {\n    task,\n    complete,\n    createdAt,\n    updatedAt\n  } = todo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: complete ? \"item-text strike\" : \"item-text\",\n      onClick: () => toggleTask(todo.id),\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-dates\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-date\",\n        children: [\" \", handleSubmit(createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-date\",\n        children: [\"Created: \", formatDate(createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-date\",\n        children: [\"Last Edited: \", formatDate(updatedAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-delete\",\n      onClick: () => removeTask(todo.id),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 7\n  }, this);\n}\n_c = ToDo;\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, \"0\");\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const year = date.getFullYear();\n  const hours = date.getHours().toString().padStart(2, \"0\");\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  return `${day}.${month}.${year}:${hours}:${minutes}`;\n};\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["ToDo","todo","toggleTask","removeTask","task","complete","createdAt","updatedAt","_jsxDEV","className","children","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","formatDate","_c","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","$RefreshReg$"],"sources":["/Users/user/Projects/test/bur/lesson-todos-react-master/src/ToDo.js"],"sourcesContent":["function ToDo({ todo, toggleTask, removeTask }) {\n    const { task, complete, createdAt, updatedAt } = todo;\n    return (\n      <div key={todo.id} className=\"item-todo\">\n        <div\n          className={complete ? \"item-text strike\" : \"item-text\"}\n          onClick={() => toggleTask(todo.id)}\n        >\n          {task}\n        </div>\n        <div className=\"item-dates\">\n          <div className=\"item-date\"> {handleSubmit(createdAt)}</div>\n          <div className=\"item-date\">Created: {formatDate(createdAt)}</div>\n          <div className=\"item-date\">Last Edited: {formatDate(updatedAt)}</div>\n        </div>\n        <div className=\"item-delete\" onClick={() => removeTask(todo.id)}>\n          X\n        </div>\n      </div>\n    );\n  }  \n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    return `${day}.${month}.${year}:${hours}:${minutes}`;\n  };  \n\nexport default ToDo"],"mappings":";;AAAA,SAASA,IAAIA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAC5C,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAU,CAAC,GAAGN,IAAI;EACrD,oBACEO,OAAA;IAAmBC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtCF,OAAA;MACEC,SAAS,EAAEJ,QAAQ,GAAG,kBAAkB,GAAG,WAAY;MACvDM,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACD,IAAI,CAACW,EAAE,CAAE;MAAAF,QAAA,EAElCN;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNR,OAAA;MAAKC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBF,OAAA;QAAKC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,GAAC,EAACO,YAAY,CAACX,SAAS,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DR,OAAA;QAAKC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,WAAS,EAACQ,UAAU,CAACZ,SAAS,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjER,OAAA;QAAKC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,eAAa,EAACQ,UAAU,CAACX,SAAS,CAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACNR,OAAA;MAAKC,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEA,CAAA,KAAMR,UAAU,CAACF,IAAI,CAACW,EAAE,CAAE;MAAAF,QAAA,EAAC;IAEjE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,GAdEf,IAAI,CAACW,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeZ,CAAC;AAEV;AAACG,EAAA,GApBMnB,IAAI;AAqBX,MAAMkB,UAAU,GAAIE,UAAU,IAAK;EACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,GAAG,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,MAAMC,KAAK,GAAG,CAACN,IAAI,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/D,MAAMG,IAAI,GAAGR,IAAI,CAACS,WAAW,CAAC,CAAC;EAC/B,MAAMC,KAAK,GAAGV,IAAI,CAACW,QAAQ,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,MAAMO,OAAO,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAACT,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,OAAQ,GAAEH,GAAI,IAAGI,KAAM,IAAGE,IAAK,IAAGE,KAAM,IAAGE,OAAQ,EAAC;AACtD,CAAC;AAEH,eAAejC,IAAI;AAAA,IAAAmB,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}