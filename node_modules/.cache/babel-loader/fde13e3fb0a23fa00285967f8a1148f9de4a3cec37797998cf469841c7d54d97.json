{"ast":null,"code":"var _jsxFileName = \"/Users/user/Projects/sber/src/ParamEditor.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ParamEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.handleParamValueChange = (paramId, value) => {\n      this.setState(prevState => ({\n        paramValues: prevState.paramValues.map(pv => pv.paramId === paramId ? {\n          ...pv,\n          value\n        } : pv)\n      }));\n      this.props.onModelChange({\n        ...this.props.model,\n        paramValues: this.state.paramValues.map(pv => pv.paramId === paramId ? {\n          ...pv,\n          value\n        } : pv)\n      });\n    };\n    this.getModel = () => ({\n      paramValues: this.state.paramValues,\n      colors: this.props.model.colors\n    });\n    this.state = {\n      paramValues: props.model.paramValues\n    };\n  }\n  render() {\n    const {\n      params\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: params.map(param => {\n        var _this$state$paramValu;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `param-${param.id}`,\n            children: [param.name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `param-${param.id}`,\n            type: \"text\",\n            value: ((_this$state$paramValu = this.state.paramValues.find(pv => pv.paramId === param.id)) === null || _this$state$paramValu === void 0 ? void 0 : _this$state$paramValu.value) || '',\n            onChange: e => this.handleParamValueChange(param.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, param.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ParamEditor;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ParamEditor","constructor","props","handleParamValueChange","paramId","value","setState","prevState","paramValues","map","pv","onModelChange","model","state","getModel","colors","render","params","children","param","_this$state$paramValu","htmlFor","id","name","fileName","_jsxFileName","lineNumber","columnNumber","type","find","onChange","e","target"],"sources":["/Users/user/Projects/sber/src/ParamEditor.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass ParamEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paramValues: props.model.paramValues,\n    };\n  }\n\n  handleParamValueChange = (paramId, value) => {\n    this.setState((prevState) => ({\n      paramValues: prevState.paramValues.map((pv) =>\n        pv.paramId === paramId ? { ...pv, value } : pv\n      ),\n    }));\n    this.props.onModelChange({\n      ...this.props.model,\n      paramValues: this.state.paramValues.map((pv) =>\n        pv.paramId === paramId ? { ...pv, value } : pv\n      ),\n    });\n  };\n\n  getModel = () => ({\n    paramValues: this.state.paramValues,\n    colors: this.props.model.colors,\n  });\n\n  render() {\n    const { params } = this.props;\n    return (\n      <div>\n        {params.map((param) => (\n          <div key={param.id}>\n            <label htmlFor={`param-${param.id}`}>{param.name}:</label>\n            <input\n              id={`param-${param.id}`}\n              type=\"text\"\n              value={\n                this.state.paramValues.find((pv) => pv.paramId === param.id)?.value ||\n                ''\n              }\n              onChange={(e) => this.handleParamValueChange(param.id, e.target.value)}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ParamEditor;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,SAASH,SAAS,CAAC;EAClCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,sBAAsB,GAAG,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC3C,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,WAAW,EAAED,SAAS,CAACC,WAAW,CAACC,GAAG,CAAEC,EAAE,IACxCA,EAAE,CAACN,OAAO,KAAKA,OAAO,GAAG;UAAE,GAAGM,EAAE;UAAEL;QAAM,CAAC,GAAGK,EAC9C;MACF,CAAC,CAAC,CAAC;MACH,IAAI,CAACR,KAAK,CAACS,aAAa,CAAC;QACvB,GAAG,IAAI,CAACT,KAAK,CAACU,KAAK;QACnBJ,WAAW,EAAE,IAAI,CAACK,KAAK,CAACL,WAAW,CAACC,GAAG,CAAEC,EAAE,IACzCA,EAAE,CAACN,OAAO,KAAKA,OAAO,GAAG;UAAE,GAAGM,EAAE;UAAEL;QAAM,CAAC,GAAGK,EAC9C;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDI,QAAQ,GAAG,OAAO;MAChBN,WAAW,EAAE,IAAI,CAACK,KAAK,CAACL,WAAW;MACnCO,MAAM,EAAE,IAAI,CAACb,KAAK,CAACU,KAAK,CAACG;IAC3B,CAAC,CAAC;IAtBA,IAAI,CAACF,KAAK,GAAG;MACXL,WAAW,EAAEN,KAAK,CAACU,KAAK,CAACJ;IAC3B,CAAC;EACH;EAqBAQ,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACf,KAAK;IAC7B,oBACEH,OAAA;MAAAmB,QAAA,EACGD,MAAM,CAACR,GAAG,CAAEU,KAAK;QAAA,IAAAC,qBAAA;QAAA,oBAChBrB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAOsB,OAAO,EAAG,SAAQF,KAAK,CAACG,EAAG,EAAE;YAAAJ,QAAA,GAAEC,KAAK,CAACI,IAAI,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1D5B,OAAA;YACEuB,EAAE,EAAG,SAAQH,KAAK,CAACG,EAAG,EAAE;YACxBM,IAAI,EAAC,MAAM;YACXvB,KAAK,EACH,EAAAe,qBAAA,OAAI,CAACP,KAAK,CAACL,WAAW,CAACqB,IAAI,CAAEnB,EAAE,IAAKA,EAAE,CAACN,OAAO,KAAKe,KAAK,CAACG,EAAE,CAAC,cAAAF,qBAAA,uBAA5DA,qBAAA,CAA8Df,KAAK,KACnE,EACD;YACDyB,QAAQ,EAAGC,CAAC,IAAK,IAAI,CAAC5B,sBAAsB,CAACgB,KAAK,CAACG,EAAE,EAAES,CAAC,CAACC,MAAM,CAAC3B,KAAK;UAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA,GAVMR,KAAK,CAACG,EAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWb,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}